package tg

import (
	"fmt"
	"support-bot/internal/log"
	"support-bot/internal/usedesk"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type HandlerFunc func(app *Bot, update tgbotapi.Update) error

const (
	startMsg0 = `
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!
–í —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∑–∞–ø—Ä–æ—Å—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è —É—á–µ–Ω–∏–∫–æ–≤ –∏ –≥—Ä—É–ø–ø, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç—å—é, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º
–ù–∞–∂–º–∏—Ç–µ —Å–ª–µ–≤–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø—Ä–æ—Å¬ª —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã–ª–∞—Å—å —Ñ–æ—Ä–º–∞, –∫–æ—Ç–æ—Ä—É—é –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –Æ–∑–¥–µ—Å–∫. –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ—è–≤–∏—Ç—Å—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ.
 –£–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, —á—Ç–æ–±—ã —Å–µ—Ä–≤–∏—Å —Å–º–æ–≥ –µ–µ —Ä–µ—à–∏—Ç—å. –ü–∏—à–∏—Ç–µ –≤–µ–∂–ª–∏–≤–æ –∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ –¥—Ä—É–≥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º üòå
–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –æ—Ç–¥–µ–ª–æ–≤: —Å 9:00 –¥–æ 21:00 –º—Å–∫
–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ñ–æ—Ä–º–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–±–∞–≥–∏/–ø—Ä–æ–±–ª–µ–º—ã - –ø–∏—à–∏—Ç–µ @slice13

`
	startMsg1 = `
–ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º:
 üí´ –∑–∞–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É
 üí´ 1 –∫–ª–∏–µ–Ω—Ç - 1 –∑–∞–ø—Ä–æ—Å
–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –≤ –Æ–∑–¥–µ—Å–∫.

`
	startMsg2Pined = `
–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –∫–∞–∫–æ–º—É –æ—Ç–¥–µ–ª—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è, –≤ —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º—ã:
#—Ç–µ—Ö–∏
1. –û—Ç–º–µ—Ç–∫–∞ —è–≤–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤ –≤ crm
2. –ü–æ–∏—Å–∫ —É—á–µ–Ω–∏–∫–æ–≤ –≤ –Ω–∞—á–∞–ª–µ —É—Ä–æ–∫–∞ (–µ—Å–ª–∏ –≤ –≤–∞—à–µ–º —á–∞—Ç–µ –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç –±–æ–ª–µ–µ 10 –º–∏–Ω—É—Ç)
3. –ü–æ–º–æ—â—å –≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —É—Ä–æ–∫—É, –≤—ã–ª–µ—Ç—ã —Å —É—Ä–æ–∫–æ–≤
4. –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π, –¥–∑, –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É
5. –ü–æ–º–æ—â—å –≤ —Ç–µ—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –º–∏–∫—Ä–æ, –∑–≤—É–∫–æ–º, –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π
6. –ü–æ–º–æ—â—å –≤ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º (–Ω–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è —Å –∫–æ–¥–æ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º)
7. –ü–µ—Ä–µ–Ω–æ—Å –∫—É—Ä—Å–æ–≤ –∏ —É—á–µ–Ω–∏–∫–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É EasyCode
8. –°–º–µ–Ω–∞ –ø—Ä–µ–ø–æ–¥–∞ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö EasyCode, EasyEng
9. –ü—Ä–æ–±–ª–µ–º—ã —Å life digital

#—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
1. –î—É–±–ª–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
2. –ù–∞–ª–æ–∂–µ–Ω–∏–µ —É—Ä–æ–∫–æ–≤
3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç –≤ –∫—É—Ä—Å–µ
4. –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤
5. –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è/—Ä–∞—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
6. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å —É—á–µ–Ω–∏–∫–∞

 #–∑–∞–±–æ—Ç–∞
1. –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ —Ä–µ–±–µ–Ω–∫–∞
2. –ù–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ç—Ä–∞–±–æ—Ç–∫—É
3. –û—Ç–∫–∞–∑—ã–≤–∞–ª–∏—Å—å –Ω–∞ —É—Ä–æ–∫–µ
4. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å—é —Ä–µ–±–µ–Ω–∫–∞
5. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –Ω–∞ –¥—Ä—É–≥–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ/–≥—Ä—É–ø–ø—É /—Ñ–æ—Ä–º–∞—Ç
6. –°–≤—è–∑—å —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏
7. –ü–µ—Ä–µ–Ω–æ—Å –ü–û–î–ê–†–û–ß–ù–û–ì–û –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è
8. –û–° –ø–æ —É—Ä–æ–∫–∞–º
`
)

func handleError(err error) error {
	log.Log.Error(err.Error())
	return err
}

func (bot *Bot) handleErrorWithAdmins(err error) error {
	go bot.SendAllAdmins(err.Error())
	return err
}

// handleStartMessage –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ç–∏–∫–µ—Ä –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
func HandleStartMessage() HandlerFunc {
	return func(app *Bot, update tgbotapi.Update) error {

		newMsg := tgbotapi.NewMessage(update.Message.From.ID, startMsg0)
		newMsg.ParseMode = "html"
		_, err := app.SendMessage(newMsg)
		if err != nil {
			handleError(err)
		}

		newMsg = tgbotapi.NewMessage(update.Message.From.ID, startMsg1)
		newMsg.ParseMode = "html"
		_, err = app.SendMessage(newMsg)
		if err != nil {
			handleError(err)
		}

		// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ
		msgText := tgbotapi.NewMessage(update.Message.From.ID, startMsg2Pined)
		msgText.ParseMode = "html"
		pinupMsg, err := app.SendMessage(msgText)
		if err != nil {
			return handleError(err)
		}

		// –û—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫—Ä–µ–ø–æ–≤
		unpinConfig := tgbotapi.UnpinAllChatMessagesConfig{
			ChatID:          update.Message.Chat.ID,
			ChannelUsername: update.Message.From.UserName,
		}
		_, err = app.BotAPI.Request(unpinConfig)
		if err != nil {
			return handleError(err)
		}

		// –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
		pinConfig := tgbotapi.PinChatMessageConfig{
			ChatID:              update.Message.Chat.ID,
			MessageID:           pinupMsg.MessageID,
			DisableNotification: false, // –ï—Å–ª–∏ true, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
		}
		_, err = app.BotAPI.Request(pinConfig)
		if err != nil {
			return handleError(err)
		}
		return nil
	}
}

// handleStartMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥ –Ω–∏–º. –ö–Ω–æ–ø–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É.
func HandleSendFormMessage(wepAppUrl, msgText, buttonMsg string) HandlerFunc {
	return func(app *Bot, update tgbotapi.Update) error {
		// –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, msgText)
		// –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
		row := []tgbotapi.InlineKeyboardButton{
			tgbotapi.NewInlineKeyboardButtonURL(buttonMsg, wepAppUrl),
		}
		// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
		msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(row)

		// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		_, err := app.sendMessage(msg)
		if err != nil {
			handleError(err)
		}
		return nil
	}
}

func (app *Bot) HandleUserMessage(update tgbotapi.Update) error {
	if update.Message == nil {
		return handleError(fmt.Errorf("message is nil in HandleUserMessage"))
	}

	if update.Message.From == nil {
		return handleError(fmt.Errorf("message.From is nil in HandleUserMessage"))
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	if app.ticketCache == nil {
		return handleError(fmt.Errorf("ticketCache is nil in HandleUserMessage"))
	}
	if app.usedesk == nil {
		return handleError(fmt.Errorf("usedesk is nil in HandleUserMessage"))
	}

	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–∫–µ—Ç–∞ ID
	log.Log.Info("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–∫–µ—Ç–∞ ID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID: ", update.Message.From.ID)

	// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–∫–µ—Ç–∞ ID
	telegramID := update.Message.From.ID
	ticketID, ok := app.ticketCache.GetCurrentTicketIDByTgId(telegramID)
	// –ï—Å–ª–∏ —Ç–∏–∫–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
	if ok {
		return app.createUsedeskCommentary(update, ticketID)
		// –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–∫–µ—Ç, –∑–Ω–∞—á–∏—Ç –Ω–∞–¥–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç —Å —á–∞—Ç–æ–º
	} else {
		return app.createUsedeskTickerChat(update)
	}
}

func (app *Bot) createUsedeskCommentary(update tgbotapi.Update, ticketID int64) error {
	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
	log.Log.Info("–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–∞ ID: ", ticketID)

	if ticketID == 0 {
		log.Log.Warn("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è —Ç–∏–∫–µ—Ç–∞ —Å ID 0")
		return app.handleErrorWithAdmins(fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ usedesk: ticketID=0"))
	}

	comm := usedesk.NewCommentRequest{
		Message:  update.Message.Text,
		TicketID: ticketID,
		Type:     "public",
		From:     "client",
	}
	_, err := app.usedesk.CreateComment(comm)

	if err != nil {
		log.Log.Info("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ usedesk: ", err)
		return app.handleErrorWithAdmins(fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ usedesk: %v", err))
	}

	return nil
}

func (app *Bot) createUsedeskTickerChat(update tgbotapi.Update) error {
	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞
	log.Log.Info("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ", update.Message.From.FirstName, " ", update.Message.From.LastName)

	tick := usedesk.NewTicketRequest{
		Message:    update.Message.Text,
		Subject:    "Telegram chat",
		ClientName: update.Message.From.FirstName + " " + update.Message.From.LastName + "(" + update.Message.From.UserName + ")",
	}

	resp, err := app.usedesk.CreateTicket(tick)
	if err != nil {
		log.Log.Info("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: ", err)
		return app.handleErrorWithAdmins(fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: %v", err))
	}

	log.Log.Info("–¢–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å ID: ", resp.TicketID)

	err = app.ticketCache.SaveTicket(update.Message.From.ID, resp.TicketID)
	if err != nil {
		log.Log.Info("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: ", err)
		return app.handleErrorWithAdmins(fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: %v", err))
	}
	return nil
}
